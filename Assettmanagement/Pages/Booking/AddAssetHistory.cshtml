@page
@model Assettmanagement.Pages.Booking.AddAssetHistoryModel
@{
    ViewData["Title"] = "Add Asset History";
}

<h2>Add Asset History</h2>

<form method="post" id="addAssetHistoryForm">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="AssetHistory.AssetId" class="control-label">Asset</label>
        <select asp-for="AssetHistory.AssetId" class="form-control" asp-items="@(TempData["AssetList"] as SelectList)">
        </select>
        <span asp-validation-for="AssetHistory.AssetId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="AssetHistory.UserId" class="control-label">User</label>
        <select asp-for="AssetHistory.UserId" class="form-control" asp-items="@(TempData["UserList"] as SelectList)">
        </select>
        <span asp-validation-for="AssetHistory.UserId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="AssetHistory.Comment" class="control-label">Comment</label>
        <input asp-for="AssetHistory.Comment" class="form-control" id="commentField" />
        <span asp-validation-for="AssetHistory.Comment" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Add Asset History</button>

    @if (Model.AssetHistory_dtos != null && Model.AssetHistory_dtos.Count > 0)
    {
        <div id="history-section">
            <table class="table">
                <thead>
                    <tr>
                        <th>Timestamp</th>
                        <th>UserName</th>
                        <th>Comment</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var history in Model.AssetHistory_dtos)
                    {
                        <tr>
                            <td>@history.Timestamp.ToString("G")</td>
                            <td>@history.UserName</td>
                            <td>@history.Comment</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    } else
    {
        <div id="history-section">
            <table class="table">
                <thead>
                    <tr>
                        <th>Timestamp</th>
                        <th>UserName</th>
                        <th>Comment</th>
                    </tr>
                </thead>
            </table>
        </div>
    }
</form>

@if (TempData["ResultMessage"] != null)
{
    <div class="alert @(TempData["IsSuccess"] as bool? == true ? "alert-success" : "alert-danger") mt-3">
        @TempData["ResultMessage"].ToString()
    </div>
}


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function updateHistorySection(data) {
            var historySection = document.getElementById("history-section");
            if (data.length === 0) {
                historySection.innerHTML = "<p>No asset history found.</p>";
                return;
            }

            var historyHtml = `<table class="table">
                <thead>
                    <tr>
                        <th>Timestamp</th>
                        <th>User</th>
                        <th>Comment</th>
                    </tr>
                </thead>
                <tbody>`;
            if (Array.isArray(data)){
                data.forEach(history => {
                    historyHtml += `<tr>
                    <td>${new Date(history.timestamp).toLocaleString()}</td>
                    <td>${history.userName}</td>
                    <td>${history.comment}</td>
                </tr>`;
                });
            } else {
                console.error('Expected an array but not recieved', data);
            }
            historyHtml += "</tbody></table>";
            historySection.innerHTML = historyHtml;
        }

        document.getElementById("AssetHistory_AssetId").addEventListener("change", function () {
            var assetId = this.value;
            if (assetId) {
                fetch("/Booking/AddAssetHistory?handler=LoadAssetHistories&assetId=" + assetId)
                    .then(response => response.json())
                    .then(updateHistorySection);
            } else {
                updateHistorySection([]);
            }
        });

        document.getElementById("addAssetHistoryForm").addEventListener("submit", function (event) {
            event.preventDefault();

            var formData = new FormData(this);

            fetch(this.action, {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        return response.text().then(text => { throw new Error(text || 'Response not OK') });
                    }
                    return response.json();
                })
                .then(data => {
                    updateHistorySection(data); // Update your asset history table

                    document.getElementById("commentField").value = "";
                })
                .catch(error => console.error('Error:', error));
        });

    </script>
}
